:root {
	--bg: gainsboro;
	--color: black;
	--subheader-bg: #EAEAE7;
	--component-hover: rgb(150, 150, 150);
	--component-active: rgb(100, 100, 100);
	--canvas-bg: white;
	--toolbar-item-border: #c0c0c0;
}

:root[data-dark-mode=true] {
	--bg: #2c2f31;
	--color: white;
	--subheader-bg: #252829;
	--component-hover: #535a5e;
	--component-active: #4b5255;
	--canvas-bg: #93bee2;
	--toolbar-item-border: #42474a;
	scrollbar-color: #454a4d #202324;
	color-scheme: dark only;
}
html {
	font-size: 62.5%;
}
body, html {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
	overflow: hidden;
}
body {
	font-family: Ubuntu, Arial, Helvetica, sans-serif;
	background: var(--bg);
	transition: background var(--speed) var(--easing);
}

:root:not([data-dark-loaded]) * {
	transition: none !important;
}

#canvasContainer {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--canvas-bg);
	transition: background var(--speed) var(--easing);
}

canvas {
	width: 100%;
	height: 100%;
}

#toolbar {
	position: fixed;
	box-sizing: content-box;
	top: 10px;
	left: 10px;
	padding: 1px 1px;
	height: 5rem;
	overflow: hidden;
	background-color: var(--bg);
	transition: background var(--speed) var(--easing), height .3s ease;
	border: 1px solid black;
	border-radius: 8px;
	z-index: 1010;
}

#toolbar.open {
	height: calc(15rem + 1px);
}

.outsideMenu {
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	background: rgba(0, 0, 0, 0);
	width: 100%;
	height: 100%;
	z-index: 1005;
}

.open + .outsideMenu {
	display: block;
}

#darkMode-container {
	position: fixed;
	top: 10px;
	right: 10px;
	z-index: 1000;
}

#darkMode-container *,
#darkMode-container *:after,
#darkMode-container *:before {
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}

#componentMenu {
	position: fixed;
	/* top: calc(5rem + 20px); */
	bottom: 10px;
	left: 10px;
	padding: 7px 7px;
	background-color: var(--bg);
	transition: background var(--speed) var(--easing);
	border: 1px solid black;
	border-radius: 12px;
	z-index: 1000;
	min-height: 6.3rem;
	max-height: 50%;
	min-width: 32rem;
}

#componentMenu,
#configurationEditor {
	--primary:#006494;
	--on-primary:#ffffff;
	--primary-container:#cbe6ff;
	--on-primary-container:#001e30;
	--secondary:#50606f;
	--on-secondary:#ffffff;
	--secondary-container:#d3e5f6;
	--on-secondary-container:#0c1d29;
	--tertiary:#65587b;
	--on-tertiary:#ffffff;
	--tertiary-container:#ebdcff;
	--on-tertiary-container:#211634;
	--error:#ba1a1a;
	--on-error:#ffffff;
	--error-container:#ffdad6;
	--on-error-container:#410002;
	--background:#fcfcff;
	--on-background:#1a1c1e;
	--surface:#f9f9fc;
	--on-surface:#1a1c1e;
	--surface-variant:#dde3ea;
	--on-surface-variant:#41474d;
	--outline:#72787e;
	--outline-variant:#c1c7ce;
	--shadow:#000000;
	--scrim:#000000;
	--inverse-surface:#2e3133;
	--inverse-on-surface:#f0f0f3;
	--inverse-primary:#8ecdff;
	--surface-dim:#d9dadd;
	--surface-bright:#f9f9fc;
	--surface-container-lowest:#ffffff;
	--surface-container-low:#f3f3f6;
	--surface-container:#edeef1;
	--surface-container-high:#e8e8eb;
	--surface-container-highest:#e2e2e5;
}

[data-dark-mode=true] #componentMenu,
[data-dark-mode=true] #configurationEditor {
	--primary:#8ecdff;
	--on-primary:#00344f;
	--primary-container:#004b70;
	--on-primary-container:#cbe6ff;
	--secondary:#b8c8d9;
	--on-secondary:#22323f;
	--secondary-container:#394956;
	--on-secondary-container:#d3e5f6;
	--tertiary:#d0c0e8;
	--on-tertiary:#362b4a;
	--tertiary-container:#4d4162;
	--on-tertiary-container:#ebdcff;
	--error:#ffb4ab;
	--on-error:#690005;
	--error-container:#93000a;
	--on-error-container:#ffb4ab;
	--background:#1a1c1e;
	--on-background:#e2e2e5;
	--surface:#111416;
	--on-surface:#e2e2e5;
	--surface-variant:#3b3b3b; /* 41474d */
	--on-surface-variant:#ffffff; /* c1c7ce */
	--outline:#8b9198;
	--outline-variant:#41474d;
	--shadow:#000000;
	--scrim:#000000;
	--inverse-surface:#e2e2e5;
	--inverse-on-surface:#2e3133;
	--inverse-primary:#006494;
	--surface-dim:#111416;
	--surface-bright:#37393c;
	--surface-container-lowest:#0c0e11;
	--surface-container-low:#1a1c1e;
	--surface-container:#1e2022;
	--surface-container-high:#282a2d;
	--surface-container-highest:#333537;
}

#componentEditor {
	position: fixed;
	top: 50px;
	right: 10px;
	background-color: var(--bg);
	transition: background var(--speed) var(--easing);
	border: 1px solid black;
	border-radius: 8px;
	z-index: 1000;
	min-height: 32rem;
	max-height: 50%;
	min-width: 20rem;
}

#componentEditor.hidden {
	display: none;
}

#componentEditorHeader {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 0.5rem 0.7rem;
	background-color: var(--subheader-bg);
	border-bottom: 1px solid var(--toolbar-item-border);
	border-radius: 8px 8px 0 0;
}

.componentEditorTitle {
	font-size: 1.5rem;
	font-weight: bold;
	color: var(--color);
}

.componentEditorTitleButton {
	cursor: pointer;
}

.componentEditorTitleButton:hover {
	color: var(--component-hover);
}

#componentEditorContent {
	overflow-y: hidden;
	max-height: calc(100% - 3rem);
}

#componentEditorProperties {
	display: flex;
	flex-direction: column;
	padding: 0.5rem;
}

#componentEditorConnections {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	background-color: var(--subheader-bg);
	border-top: 1px solid var(--toolbar-item-border);
	border-radius: 0 0 8px 8px;
}

#componentEditorConnectionsHeader {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	border-bottom: 1px solid var(--toolbar-item-border);
	padding: 0.5rem 0.7rem;
}

#componentEditorConnectionsList {
	font-size: 1.5rem;
}

#componentEditorConnectionsList li {
	display:block;
	max-width: 100%;
	overflow: hidden;
	line-height: 2rem;
	user-select: none;
}

#componentEditorConnectionsList .instant {
	float: left;
	font-size: 2rem;
	padding: 0 0.5rem;
}

#componentEditorConnectionsList .instant::after {
	content: " \2261";
}

#componentEditorConnectionsList .edit {
	float: right;
	cursor: pointer;
}
#componentEditorConnectionsList .edit::after {
	content: "E";
}
#componentEditorConnectionsList .edit::hover {
	color: var(--component-hover);
}

#componentEditorConnectionsList .delete {
	float: right;
	padding: 0 0.5rem;
	cursor: pointer;
}
#componentEditorConnectionsList .delete::after {
	content: "D";
}
#componentEditorConnectionsList .delete::hover {
	color: var(--component-hover);
}

#connectionEditor {
	position: fixed;
	top: calc(100vh / 2);
	left: calc(100vw / 2);
	background-color: var(--bg);
	transition: background var(--speed) var(--easing);
	border: 1px solid black;
	border-radius: 8px;
	z-index: 1000;
	max-height: 50%;
	min-width: 20rem;
}

#connectionEditor.hidden {
	display: none;
}

#connectionEditorHeader {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 0.5rem 0.7rem;
	background-color: var(--subheader-bg);
	border-bottom: 1px solid var(--toolbar-item-border);
	border-radius: 8px 8px 0 0;
}

#connectionEditorHeader .componentEditorTitleButton:first-child{
	padding-right: 0.5rem;
}

#connectionEditorContent {
	overflow-y: hidden;
	max-height: calc(100% - 3rem);
}

#connectionEditorProperties {
	display: flex;
	flex-direction: column;
	padding: 0.5rem;
}

#connectionMagnitudeLock {
	margin: 0 0 0 0.5rem;
}

.componentEditorActions {
	display: flex;
	flex-direction: row;
	position: absolute;
	bottom: 0;
	width: 100%;
	justify-content: space-evenly;
	border-top: 1px solid var(--toolbar-item-border);
}

.slider.auto-width {
	inline-size: auto;
}

.tooltip {
	font-size: 1rem !important;
}

.extra-text {
	font-size: 1.4rem !important;
}

#configurationEditor {
	max-width: calc(100% - 5rem - 16px);
	---margin: calc(5rem + 20px) 0 0 calc(5rem + 16px);
	width: 48rem;
	z-index: 1050;
	transition: background var(--speed) var(--easing);
}

#configurationEditor * {
	transition: background var(--speed) var(--easing);
}

#colorfield *,
#subcolorfield * {
  cursor: pointer;
}

#colorfield label,
#subcolorfield label {
  font-size: 1.1rem;
}

#colorfield input[type=text],
#subcolorfield input[type=text] {
  padding-inline-start: 3.4rem;
  font-size: 1.5rem !important;
}

#colorfield>i,
#subcolorfield>i {
  inline-size: var(---size);
  block-size: var(---size);
  padding-bottom: 1px;
}

#colorfield>i:after,
#subcolorfield>i:after {
  border: 1px solid transparent;
  content: "";
  display: block;
  height: 1px;
  inset: 88% 0 0 3%;
  position: absolute;
  width: 80%;
}

#colorfield>i:after {
  background: var(--gridcolor);
}

#subcolorfield>i:after {
  background: var(--gridsubcolor);
}

.toolbarItem {
	width: 5rem;
	height: 5rem;
	padding: 1rem;
	margin: 0;
	box-sizing: border-box;
}

.mainbar > .toolbarItem:nth-child(n+2) {
	border-left: 1px solid var(--toolbar-item-border);
	transition: border-left-color var(--speed) var(--easing);
}

.toolbarItem img.icon {
	max-height: 100%;
	max-height: 100%;
	max-inline-size: none;
	margin: 0;
	max-block-size: 100%;
	width: auto;
	height: auto;
}

.menuItem {
	height: 5rem;
	padding: 1rem;
	width: 100%;
	box-sizing: border-box;
	margin: 0;
	font-size: revert;
	border-radius: 0.5rem;
	text-align: left;
}

.menuItem img.icon {
	max-height: 3rem;
	max-inline-size: none;
	max-block-size: 100%;
	margin: 0;
	width: auto;
	height: auto;
	vertical-align: middle;
}

[data-dark-mode=true] .toolbarItem img.icon,
[data-dark-mode=true] .menuItem img.icon {
	filter: invert(1);
}

.button,
button{
	display: inline-block;
	border-radius: 0;
	background: none;
	border: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

.button:focus-visible,
button:focus-visible {
	outline: none !important;
}

.button:active,
button:active {
	opacity: 0.6;
}

#darkMode-container button {
	block-size: 100%;
	margin: 0;
}

#darktoggle:after {
	opacity: 1;
}

#darktoggle:is(:focus-visible, :hover):after {
	opacity: 1;
	background-size: 100%;
}

#darkMode-container button:active {
	opacity: 1;
}

.toolbarItem[disabled] {
	opacity: 0.5;
}

.button span.label,
button span.label {
	display: none;
}

.componentEditorActions button {
	flex-grow: 1;
	cursor: pointer;
}

.componentEditorActions button:first-child {
	border-right: 1px solid var(--toolbar-item-border);
}

.menuDivider {
	display: none;
	border-top: 1px solid var(--toolbar-item-border);
	transition: border-top-color var(--speed) var(--easing);
	margin-left: calc(5rem + 3px);
}

.open > .menuDivider {
	display: block;
}

.menuItem > span {
	font-size: 1.5rem;
	vertical-align: middle;
	color: var(--color);
	padding-left: 0.5rem;
}

.componentBrowser {
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	flex-wrap: wrap;
	min-height: 8rem;
}
.componentBrowser img.track {
	width: auto;
	height: auto;
	max-width: 100%;
	max-height: 100%;
	display: inline-block;
}

.componentBrowser>button {
	box-sizing: border-box;
	width: 4rem;
	height: 4rem;
	padding: 0.1rem;
	margin: 0;
}

@media (hover:hover) {
	button:hover, .button:hover {
		opacity: 0.6;
	}

	button.menuItem:hover {
		background: var(--component-hover);
		opacity: 1;
	}

	.componentBrowser>button:hover {
		background: var(--component-hover);
		opacity: 1;
	}

	#darkMode-container button:hover {
		opacity: 1;
	}
}

.componentBrowser>button:active {
	background: var(--component-active);
	opacity: 1;
}

#categoryDiv {
	width: 50%;
	margin: 0;
}

#categories {
	font-size: revert;
	padding-left: 0.5rem;
}

#categories ~ i {
	inset: 45% 0.5rem auto auto;
}

#searchText {
	font-size: revert;
	padding-left: 0.5rem;
}

#searchText:focus {
	padding-left: 0.5rem;
}

.search {
	width: 50%;
	margin: 0;
}

#searchText ~ i {
	inset: 50% 0.5rem auto auto;
}

.searchIcon {
	display: flex;
}

#searchClearButton {
	z-index: 2;
}

.searchClear {
	display: none;
}

.hasInput ~ .searchClear {
	display: flex;
}

.hasInput ~ .searchIcon {
	display: none;
}

@media (min-width: 40rem) {
	h1 {
		width: 24rem;
		min-width: 24rem;
		max-width: 24rem;
	}

	.componentBrowser>button {
		width: 8rem;
		height: 8rem;
		padding: 1rem;
	}
}

@media (max-width: 50rem) {
	#configurationEditor {
		max-width: 48rem;
		---margin: calc(5rem + 20px) 0 0 0;
		width: 100%;
	}



	@media (max-height: 30rem) {
		#configurationEditor {
			---margin: 0 0 0 0;
		}
	}
}

@media (max-width: 28rem) {
	button[data-tab=appearance] {
		font-size: 1rem !important;
	}
}